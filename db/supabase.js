import { createClient } from '@supabase/supabase-js';

const SUPABASE_URL = process.env.SUPABASE_URL;
const SUPABASE_KEY = process.env.SUPABASE_KEY;

export const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);

/**
 * Executa SQL diretamente no Supabase atrav√©s da API
 * Nota: Esta √© uma solu√ß√£o alternativa, j√° que o m√©todo ideal seria
 * usar migrations com drizzle-orm direto no Supabase
 */
export async function executeSql(sql) {
  try {
    // Usar o recurso de RPC para executar SQL diretamente
    // Se o Supabase n√£o tiver uma fun√ß√£o SQL RPC configurada, isto falhar√°
    // e voc√™ precisar√° criar a fun√ß√£o no painel do Supabase
    const { data, error } = await supabase.rpc('execute_sql', { sql_query: sql });
    
    if (error) {
      console.error('Erro ao executar SQL:', error.message);
      return { success: false, error: error.message };
    }
    
    return { success: true, data };
  } catch (error) {
    console.error('Erro inesperado executando SQL:', error.message);
    return { success: false, error: error.message };
  }
}

/**
 * Fun√ß√£o para inicializar o banco de dados
 * Isso vai criar todas as tabelas necess√°rias no Supabase
 * 
 * Nota: Esta fun√ß√£o deve ser chamada apenas uma vez para configura√ß√£o inicial
 * ou ent√£o executar pelo painel administrativo do Supabase
 */
export async function initializeDatabase(sqlContent) {
  try {
    console.log('üîÑ Tentando inicializar banco de dados...');
    
    // Tentar executar o SQL pelo RPC
    const result = await executeSql(sqlContent);
    
    if (!result.success) {
      console.log('‚ö†Ô∏è N√£o foi poss√≠vel executar SQL atrav√©s de RPC.');
      console.log('‚ö†Ô∏è Voc√™ precisar√° criar as tabelas manualmente pelo painel do Supabase ou configurar uma fun√ß√£o RPC para executar SQL.');
      return false;
    }
    
    console.log('‚úÖ Banco de dados inicializado com sucesso!');
    return true;
  } catch (error) {
    console.error('‚ùå Erro durante a inicializa√ß√£o do banco de dados:', error.message);
    return false;
  }
}