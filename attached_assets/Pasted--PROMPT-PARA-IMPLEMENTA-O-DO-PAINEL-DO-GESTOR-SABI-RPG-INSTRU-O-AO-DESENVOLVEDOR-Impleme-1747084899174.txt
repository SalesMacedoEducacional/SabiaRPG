
üõ†Ô∏è PROMPT PARA IMPLEMENTA√á√ÉO DO PAINEL DO GESTOR (SABI√Å RPG)

INSTRU√á√ÉO AO DESENVOLVEDOR:

Implemente imediatamente as seguintes funcionalidades no painel do GESTOR da plataforma Sabi√° RPG, garantindo total integra√ß√£o com o banco de dados, consist√™ncia visual com o novo padr√£o de cores da UI, e rotas corretas conforme descrito abaixo. A execu√ß√£o deve seguir fielmente os pontos sequenciais:

‚úÖ 1. TOTAL DE ESCOLAS VINCULADAS
- Consulta: Buscar da tabela escolas todas as escolas onde gestor_id = auth.user_id() e ativa = true.
- Exibi√ß√£o: Mostrar a quantidade total de escolas ativas vinculadas.
- A√ß√£o Extra: Incluir bot√£o ‚Äúüîé Ver Detalhes‚Äù, que ao ser clicado abre modal com:
  - nome da escola
  - cidade (via rela√ß√£o com tabela cidades)
- Layout: Aplicar estilo do tema principal (background card, texto branco, bordas douradas conforme tema).

‚úÖ 2. TOTAL DE PROFESSORES
- Consulta: Buscar na tabela perfis_professor todos os registros onde escola_id perten√ßa a uma das escolas do gestor logado.
- Exibi√ß√£o: Mostrar o n√∫mero total de professores.
- A√ß√£o Extra: Incluir bot√£o ‚Äúüîé Ver Detalhes‚Äù, exibindo modal com:
  - nome_professor
  - cpf
  - telefone

‚úÖ 3. TOTAL DE ALUNOS
- Consulta:
  - Buscar em perfis_aluno registros ativos com turma_id vinculada a turmas pertencentes √† escola do gestor.
  - Verificar se h√° v√≠nculo com matriculas atrav√©s de matricula_id.
- Exibi√ß√£o: Mostrar total de alunos ativos.
- A√ß√£o Extra: Bot√£o ‚Äúüîé Ver Detalhes‚Äù exibe modal com:
  - nome_aluno (de perfis_aluno)
  - numero_matricula (de matriculas)
  - turma.nome (via turma_id)
  - Ordena√ß√£o alfab√©tica por turma

‚úÖ 4. TURMAS ATIVAS
- Consulta: Buscar em turmas todas onde escola_id perten√ßa √†s escolas do gestor logado.
- Exibi√ß√£o: Exibir total de turmas encontradas.
- A√ß√£o Extra: Bot√£o ‚Äúüîé Ver Detalhes‚Äù exibe modal com:
  - nome, serie, ano_letivo, turno
  - Contagem de alunos na turma (com base em matriculas.turma_id)

‚úÖ 5. BOT√ÉO "VOLTAR AO DASHBOARD" NA TELA DE CADASTRAR ESCOLA
- Ajuste de Rota: Quando o bot√£o de acesso ao cadastro for via ‚ÄúA√ß√µes R√°pidas > Cadastrar Nova Escola‚Äù, exibir bot√£o "‚Üê Voltar ao Dashboard".
- Fun√ß√£o: Retornar para /gestor/dashboard.

‚úÖ 6. BOT√ÉO "VOLTAR AO DASHBOARD" NA TELA DE GERENCIAR TURMAS
- Ajuste de Rota: Quando a tela for acessada por ‚ÄúA√ß√µes R√°pidas > Gerenciar Turmas‚Äù, exibir bot√£o "‚Üê Voltar ao Dashboard".
- Fun√ß√£o: Retornar para /gestor/dashboard.

‚úÖ 7. AJUSTE NO DROPDOWN DE ESTADOS NA TELA DE CADASTRO DE ESCOLA
- Corre√ß√£o de Fonte: Dropdown deve buscar os estados da tabela estados, ordenando por nome.
- C√≥digo esperado:
  const { data: estados } = await supabase.from('estados').select('id, nome').order('nome');
- Apresentar no campo select com:
  - value = id
  - label = nome
- Bloqueio condicional: O dropdown de cidades s√≥ ser√° habilitado ap√≥s a sele√ß√£o de um estado.

‚úÖ 8. CSS E PALETA DE CORES
- Aplicar o novo padr√£o visual da paleta definida em Tailwind:
  - Bot√µes: bg-primary, hover:bg-primary-hover, text-white
  - Cards e pain√©is: bg-background-card, text-default, border-border
  - Inputs e campos: bg-background-input, focus:border-focus
  - T√≠tulos e subt√≠tulos: text-heading e text-muted
- Garantir responsividade e contraste para acessibilidade.

üí° Observa√ß√£o Final: Todas as requisi√ß√µes ao Supabase devem usar filtros baseados no auth.user() para garantir seguran√ßa e vincula√ß√£o apenas aos dados do gestor autenticado. Cada componente dever√° lidar com loading, erro e vazio.
